set-window-option -g utf8 on
set-window-option -g mode-keys vi
set-window-option -g automatic-rename off

# KeyBindings
set-window-option -g mode-keys vi

#unbind C-b
#set-option -g prefix C-j

bind C-c new-window
bind C-j last-window
bind s split-window
bind | split-window -h
bind C-k next-window
bind C-h previous-window
bind l list-window
bind [ copy-mode

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind-key T swap-window -t 0
bind-key C-h resize-pane -L 4
bind-key C-l resize-pane -R 4
bind-key C-j resize-pane -D 4
bind-key C-k resize-pane -U 4

bind A command-prompt 'rename-window %%'

set -g status off
set -g default-terminal "screen-256color"
set -g mouse-select-pane on
setw -g mode-mouse on

set -g pane-border-fg green
set -g pane-active-border-fg default
set -g pane-active-border-bg default

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"
